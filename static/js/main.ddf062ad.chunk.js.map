{"version":3,"sources":["components/TodoList.tsx","components/NewTodo.tsx","App.tsx","index.tsx"],"names":["TodoList","items","onDeleteTodo","map","todo","text","onClick","bind","id","NewTodo","onAddTodo","textInputRef","useRef","onSubmit","event","preventDefault","enteredText","current","value","htmlFor","type","ref","App","useState","todos","setTodos","className","prevState","Math","random","toString","todoId","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAqBeA,EAbuB,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aAC9C,OACE,6BACGD,EAAME,KAAI,SAACC,GAAD,OACT,+BACE,+BAAOA,EAAKC,OACZ,wBAAQC,QAASJ,EAAaK,KAAK,KAAMH,EAAKI,IAA9C,sBAFOJ,EAAKI,UCePC,G,MApByB,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAClCC,EAAeC,iBAAyB,MAQ9C,OACE,uBAAMC,SAPkB,SAACC,GACzBA,EAAMC,iBACN,IAAMC,EAAcL,EAAaM,QAASC,MAC1CR,EAAUM,IAIV,UACE,gCACE,uBAAOG,QAAQ,YAAf,uBACA,uBAAOC,KAAK,OAAOZ,GAAG,YAAYa,IAAKV,OAEzC,wBAAQS,KAAK,SAAb,2BCOSE,EAxBO,WACpB,MAA0BC,mBAAiB,IAA3C,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,CAAShB,UAfU,SAACL,GACtBoB,GAAS,SAACE,GAAD,4BACJA,GADI,CAEP,CAAEnB,GAAIoB,KAAKC,SAASC,WAAYzB,KAAMA,WAatC,cAAC,EAAD,CAAUJ,MAAOuB,EAAOtB,aATF,SAAC6B,GACzBN,GAAS,SAACE,GACR,OAAOA,EAAUK,QAAO,SAAC5B,GAAD,OAAUA,EAAKI,KAAOuB,eCZpDE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ddf062ad.chunk.js","sourcesContent":["import React from \"react\";\nimport './TodoList.css';\n\ninterface ToDoProps {\n  items: { id: string; text: string }[];\n  onDeleteTodo: (id: string) => void;\n}\n\nconst TodoList: React.FC<ToDoProps> = ({ items, onDeleteTodo }) => {\n  return (\n    <ul>\n      {items.map((todo) => (\n        <li key={todo.id}>\n          <span>{todo.text}</span>\n          <button onClick={onDeleteTodo.bind(null, todo.id)}>DELETE</button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import React, { useRef } from \"react\";\nimport './NewTodo.css';\n\ninterface NewTodoProps {\n  onAddTodo: (todoText: string) => void;\n}\n\nconst NewTodo: React.FC<NewTodoProps> = ({onAddTodo}) => {\n  const textInputRef = useRef<HTMLInputElement>(null);\n\n  const todoSubmitHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n    const enteredText = textInputRef.current!.value;\n    onAddTodo(enteredText);\n  };\n\n  return (\n    <form onSubmit={todoSubmitHandler}>\n      <div>\n        <label htmlFor=\"todo-text\">Todo Text</label>\n        <input type=\"text\" id=\"todo-text\" ref={textInputRef} />\n      </div>\n      <button type=\"submit\">ADD TODO</button>\n    </form>\n  );\n};\n\nexport default NewTodo;\n","import React, { useState } from \"react\";\nimport TodoList from \"./components/TodoList\";\nimport NewTodo from \"./components/NewTodo\";\nimport { Todo } from \"./todo.model\";\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const todoAddHandler = (text: string) => {\n    setTodos((prevState) => [\n      ...prevState,\n      { id: Math.random().toString(), text: text },\n    ]);\n  };\n\n  const todoDeleteHandler = (todoId: string) => {\n    setTodos((prevState) => {\n      return prevState.filter((todo) => todo.id !== todoId);\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <NewTodo onAddTodo={todoAddHandler} />\n      <TodoList items={todos} onDeleteTodo={todoDeleteHandler} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}